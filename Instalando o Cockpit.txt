Instalando e configurando o Cockpit no Debian server ou Ubuntu server

    • O que é o COCKPIT: O Cockpit é uma interface gráfica web para administrar e monitorar servidores Linux, permitindo que os administradores de sistema acessem informações do servidor e executem tarefas como monitoramento de recursos, gerenciamento de serviços, configuração de rede, gerenciamento de usuários, entre outros.

    1. Este comando instala o Cockpit no sistema: sudo apt -y install cockpit

    • Explicação do comando: sudo apt -y install cockpit
    • O sudo é um comando que permite executar comandos com privilégios de superusuário (root), ou seja, com permissões elevadas. 
    • O apt (Advanced Package Tool) é o sistema de gerenciamento de pacotes usado em distribuições baseadas no Debian, como Ubuntu, para instalar, atualizar e remover pacotes de software. 
    • O -y é uma opção que significa "yes" (sim). Quando você a usa, o apt automaticamente aceita todas as confirmações padrão durante o processo de instalação, ou seja, ele não vai pedir ao usuário para confirmar se deseja continuar com a instalação ou com a remoção de pacotes. 
    • O comando install indica que o apt deve instalar o pacote que é especificado em seguida. 
    • O cockpit é o nome do pacote que você está instalando. 

    2. O diretório onde os arquivos de configuração de serviços do systemd estão localizados:

    • cd /lib/systemd/system 

    • Explicação do comando: cd /lib/systemd/system 
    • O cd é um comando usado para mudar de diretório (change directory) no sistema de arquivos. Ele permite que você navegue para o diretório especificado.
    • O /lib/systemd/system é o caminho absoluto de um diretório específico dentro do sistema de arquivos.

    3. sudo vi cockpit.socket 

    • Explicação do comando: sudo vi cockpit.socket 
    • O sudo (abreviação de "superuser do") permite que você execute o comando com privilégios de superusuário (root). 
    • O vi é um editor de texto muito utilizado no ambiente Linux.
    • O cockpit.socket é um arquivo de unidade do Systemd, o sistema de inicialização e gerenciamento de serviços moderno para distribuições Linux.

    • Antes de efetuar a alteração do arquivo faça um backup ex: sudo cp cockpit.socket cockpit.socket.bkp
    
    4. Na linha 07 = ListenStream=9090 <= Aqui, você está modificando a configuração do serviço Cockpit para definir a porta em que o serviço será executado.

    • Explicação: Dentro do arquivo cockpit.socket, a linha ListenStream=9090 define a porta de rede que o serviço Cockpit usará para escutar conexões. O valor padrão pode ser 9090 ou 9091, dependendo da configuração padrão do sistema, mas você pode querer mudá-la se houver um conflito de portas ou se desejar uma configuração personalizada. O número 9090 é uma escolha comum, pois é a porta padrão usada pelo Cockpit. Ao editar esse arquivo, você pode personalizar o número da porta conforme necessário.

    5. sudo systemctl daemon-reload

    • Explicação do comando: sudo systemctl daemon-reload
    • O sudo (abreviação de "superuser do") é um comando que permite que você execute outros comandos com privilégios de superusuário (root). 
    • O systemctl é a ferramenta de linha de comando usada para interagir com o Systemd, o sistema de inicialização e gerenciamento de serviços do Linux. 
    • O daemon-reload é uma opção do systemctl que instrui o Systemd a recarregar suas configurações internas.

    6. sudo systemctl restart cockpit.socket

    • Explicação do comando: sudo systemctl restart cockpit.socket
    • O systemctl restart reinicia o serviço cockpit.socket e faz com que ele comece a escutar na nova porta definida (neste caso, na porta 9090).
    • Após modificar a configuração da porta no arquivo cockpit.socket, você precisa reiniciar o serviço para que as mudanças tenham efeito.


    • Pronto seu cockpit, já está funcionando.

Comandos:

    1. sudo systemctl enable cockpit.socket         <= Este comando habilita o serviço cockpit.socket na inicialização do sistema. 
    2. sudo systemctl stop cockpit.socket           <= Este comando interrompe imediatamente o serviço cockpit.socket.
    3. sudo systemctl restart cockpit.socket        <= Este comando reinicia o serviço cockpit.socket.
    4. sudo systemctl start cockpit.socket          <= Este comando inicia o serviço cockpit.socket.
    5. sudo systemctl status cockpit.socket         <= Este comando exibe o status do serviço cockpit.socket.

    • https://IP_DO_SERVIDOR:9090/                  <= Refere-se ao endereço URL para acessar a interface web do Cockpit.

    • Observação: Esses comandos são essenciais para gerenciar o funcionamento do Cockpit de forma eficiente e para garantir que ele esteja disponível sempre que necessário, seja manualmente iniciado ou automaticamente iniciado na inicialização do sistema.
